name: Go
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:

    - uses: actions/setup-go@v1
      with:
        go-version: 1.15

    - uses: actions/checkout@v1

    - run: make integration

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - uses: actions/checkout@v2
    - uses: actions-contrib/golangci-lint@v1
      with:
        golangci_lint_version: v1.35.2
      env:
        GOROOT: ""

  deploy:
    if: github.event_name != 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      with:
        go-version: 1.15

    - uses: actions/checkout@v1

    - name: Get tag
      if: startsWith(github.ref, 'refs/tags/')
      id: get_tag
      run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

    - name: docker login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: push tag to docker
      if: startsWith(github.ref, 'refs/tags/')
      run: make TAG=${{ steps.get_tag.outputs.TAG }} push

    - name: push latest to docker
      if: contains(github.ref, 'refs/heads/master')
      run: make push

    - name: release
      if: startsWith(github.ref, 'refs/tags/')
      uses: goreleaser/goreleaser-action@v1
      with:
        args: --config goreleaser.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.x'

    - name: packagecloud
      if: startsWith(github.ref, 'refs/tags/')
      env:
        PACKAGE_NAME: deploy-agent
        PACKAGECLOUD_TOKEN: ${{secrets.PACKAGECLOUD_TOKEN}}
      run: |
        curl -sL https://raw.githubusercontent.com/tsuru/push-to-packagecloud/master/push-github.sh | bash
